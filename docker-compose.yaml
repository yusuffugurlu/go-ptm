version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: go-ptm
    ports:
      - "8080:8080"
    # volumes:
    #   - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      # redis:
      #   condition: service_healthy
    networks:
      - monitoring

  postgres:
    image: postgres:latest
    container_name: go-ptm-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: go-ptm
    ports:
      - "5432:5432"
    # volumes:
    #   - ./postgres-data:/var/lib/postgresql/data
    #   - ./configs/dbconfig/postgresql.conf:/etc/postgresql/postgresql.conf
    #   - ./configs/dbconfig/pg_hba.conf:/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - monitoring

  prometheus:
      image: prom/prometheus
      ports:
        - "9090:9090"
      volumes:
         - ./build/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      #   - ./Devops/grafana-prometheus/prometheus/rules.yml:/etc/prometheus/rules.yml
      restart: always
      networks:
        - monitoring

  grafana:
      image: grafana/grafana
      ports:
        - "3000:3000"
      depends_on:
        - prometheus
      volumes:
      - ./build/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./build/grafana/dashboards:/var/lib/grafana/dashboards
      - ./build/grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yaml
      restart: always
      networks:
        - monitoring

networks:
  monitoring:
    driver: bridge