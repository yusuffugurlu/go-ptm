version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
    - .env
    container_name: go-ptm
    ports:
      - "8080:8080"
    # volumes:
    #   - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - monitoring

  postgres:
    image: postgres:latest
    container_name: go-ptm-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: go-ptm-db
    ports:
      - "5432:5432"
    volumes:
       - ./postgres-data:/var/lib/postgresql/data
       - ./configs/dbconfig/postgresql.conf:/etc/postgresql/postgresql.conf
       - ./configs/dbconfig/pg_hba.conf:/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - monitoring

  redis:
    image: redis:7-alpine
    container_name: go-ptm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: go-ptm-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./build/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: go-ptm-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./build/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./build/grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./build/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  monitoring:
    driver: bridge